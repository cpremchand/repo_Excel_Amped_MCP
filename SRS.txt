Software Requirements Specification
Tollgate System using LPC1768
Team ShaikImam
June 12, 2025
1 Introduction
This Software Requirements Specification (SRS) document outlines the requirements for a smart
and effective toll fee system implemented using the LPC1768 microcontroller. The system auto-
mates toll collection by detecting vehicles, processing RFID-based user identification, managing
toll charges, and controlling a physical tollgate. It interfaces with various peripherals, including
an LCD, keypad, UART, PWM, RTC, and SPI, to provide a comprehensive tollgate management
solution.
1.1 Purpose
The purpose of this document is to define the functional, non-functional, and interface require-
ments for the tollgate system. It serves as a guide for developers, testers, and stakeholders to
ensure the system meets its intended functionality, performance, and reliability goals.
1.2 Scope
The tollgate system automates toll collection for vehicles at a toll plaza. It supports:
• Vehicle detection using an IR sensor with interrupt handling.
• RFID-based user identification via UART communication.
• Toll charge calculation based on vehicle type and tag presence.
• Balance management for registered users.
• Handling of government vehicles with zero toll charges.
• Manual input for vehicle types without RFID tags.
• Real-time display of system status, temperature, and transaction details on an LCD.
• Gate control using PWM signals.
• Logging of transaction details via UART.
The system is designed to operate continuously, handle multiple vehicles sequentially, and pro-
vide user interaction through a keypad and LCD interface.
1

1.3 Definitions, Acronyms, and Abbreviations
• LPC1768: Cortex-M3 based microcontroller used as the core processing unit.
• RFID: Radio Frequency Identification, used for user/vehicle identification.
• PWM: Pulse Width Modulation, used for gate control.
• RTC: Real-Time Clock, used for time and date tracking.
• UART: Universal Asynchronous Receiver/Transmitter, used for serial communication.
• SPI: Serial Peripheral Interface, used for peripheral communication.
• IR Sensor: Infrared sensor for vehicle detection.
• LCD: Liquid Crystal Display, used for displaying messages and system status.
• UID: Unique Identifier for users/vehicles.
2 Overall Description
2.1 System Overview
The tollgate system is an embedded application running on the LPC1768 microcontroller. It in-
tegrates multiple peripherals to automate toll collection. Key components include:
• IR Sensor: Detects vehicle presence and triggers an interrupt (EINT1).
• RFID Reader: Reads user IDs via UART communication.
• LCD: Displays welcome messages, temperature, transaction details, and prompts.
• Keypad: Allows manual input for vehicle numbers, recharge amounts, and vehicle types.
• PWM Module: Controls the tollgate’s open and close operations.
• RTC: Tracks current time and date for transaction logging.
• UART: Logs transaction details and communicates with the RFID reader.
• ADC: Reads ambient temperature for display.
The system operates in a continuous loop, displaying a welcome message and temperature, pro-
cessing vehicle entries, and handling transactions based on RFID tags or manual input.
2.2 User Needs
• Toll Plaza Operators: Require an automated system to efficiently process vehicles, reduce
manual intervention, and log transactions accurately.
• Vehicle Owners: Need a seamless toll payment process with clear feedback on charges and
balance.
• Government Vehicles: Require automatic recognition and toll-free passage.
• Maintenance Staff: Need a reliable system with minimal downtime and clear error mes-
sages.
2

2.3 Assumptions and Dependencies
• The LPC1768 microcontroller is properly configured with all necessary peripherals.
• An RFID reader is connected via UART to transmit user IDs.
• The IR sensor is installed and calibrated to detect vehicles accurately.
• The tollgate mechanism supports PWM-based control for opening and closing.
• A keypad and LCD are interfaced correctly for user interaction and display.
• The system operates in a controlled environment with stable power supply.
3 System Requirements
3.1 Functional Requirements
3.1.1 Vehicle Detection
• FR1.1: The system shall detect vehicle presence using an IR sensor connected to GPIO port
P0.7.
• FR1.2: The system shall configure EINT1 as a falling-edge-sensitive interrupt to detect ve-
hicles.
• FR1.3: Upon vehicle detection, the system shall set an interrupt flag to initiate transaction
processing.
• FR1.4: The system shall clear the EINT1 interrupt flag after processing to prepare for the
next detection.
3.1.2 RFID Processing
• FR2.1: The system shall receive a 5-digit user ID (UID) from an RFID reader via UART0.
• FR2.2: The system shall display ”place Tag” on the LCD for 3 seconds to prompt RFID scan-
ning.
• FR2.3: The system shall validate the received UID against a predefined user database.
• FR2.4: The system shall display the received UID on the LCD in the format ”UID: <uid>”.
3.1.3 Toll Charge Calculation
• FR3.1: The system shall calculate toll charges based on vehicle type (Car, Truck, Motorcycle)
and tag presence.
• FR3.2: The system shall use predefined toll rates:
– Tag present: Car ($10.00), Truck ($20.00), Motorcycle ($5.00).
– Tag not present: Car ($15.00), Truck ($25.00), Motorcycle ($10.00).
• FR3.3: The system shall assign zero toll charge for government vehicles.
3

3.1.4 User Balance Management
• FR4.1: The system shall maintain a user database with UID, balance, vehicle type, and gov-
ernment vehicle status.
• FR4.2: The system shall deduct the toll charge from the user’s balance if sufficient funds
are available.
• FR4.3: The system shall display ”Insufficient Balance” and prompt for a 3-digit recharge
amount if the balance is insufficient.
• FR4.4: The system shall add the recharge amount to the user’s balance and display the
updated balance.
3.1.5 Gate Control
• FR5.1: The system shall use PWM signals to control the tollgate, with 1500 for lifting and
2500 for closing.
• FR5.2: The system shall open the gate for 3 seconds for authorized vehicles or vehicles
without tags after processing.
• FR5.3: The system shall close the gate after the vehicle passes and stop all motion indicators.
3.1.6 Display Management
• FR6.1: The system shall initialize the LCD in 8-bit, 2-line mode.
• FR6.2: The system shall display a welcome message (”HYD ORR”) on the first line and the
temperature (”Temp is <value>”) on the second line every 2 seconds when idle.
• FR6.3: The system shall display transaction-related messages (e.g., ”valid tag”, ”Process-
ing...”, ”Balance: <value>”) for 3 seconds.
• FR6.4: The system shall prompt for vehicle type selection (”0.CAR 1.TRK 2.MTC”) for vehicles
without RFID tags.
3.1.7 Transaction Logging
• FR7.1: The system shall log transaction details via UART0, including:
– UID (if available), vehicle type, toll amount, balance (if applicable), time, and date.
• FR7.2: The system shall format logs with headers and separators for clarity.
• FR7.3: The system shall retrieve current time and date from the RTC for logging.
3.1.8 User Input Handling
• FR8.1: The system shall accept a 5-digit vehicle number via keypad for manual entry.
• FR8.2: The system shall accept a 3-digit recharge amount via keypad for balance top-up.
• FR8.3: The system shall accept a single-digit input (0, 1, or 2) for vehicle type selection (Car,
Truck, Motorcycle).
• FR8.4: The system shall display each keypad input on the LCD with a 200ms delay between
digits.
4

3.1.9 System Initialization
• FR9.1: The system shall initialize all peripherals: SPI, ADC, PWM, keypad, UART0, RTC, and
LCD.
• FR9.2: The system shall set the initial time (14:09:02) and date (10/10/2024).
• FR9.3: The system shall ensure the gate is closed and motion indicators are off at startup.
• FR9.4: The system shall enable global interrupts and configure EINT1 for vehicle detection.
3.2 Non-Functional Requirements
3.2.1 Performance
• NFR1.1: The system shall process each vehicle transaction within 10 seconds, including
RFID reading, balance checking, and gate operation.
• NFR1.2: The system shall handle vehicle detection interrupts within 1ms of the IR sensor
trigger.
• NFR1.3: The system shall update the LCD display within 100ms of a new message request.
3.2.2 Reliability
• NFR2.1: The system shall operate continuously without failure for at least 24 hours under
normal conditions.
• NFR2.2: The system shall correctly identify and process at least 99% of valid RFID tags.
• NFR2.3: The system shall recover from invalid inputs (e.g., incorrect UID or keypad entry)
by prompting the user appropriately.
3.2.3 Usability
• NFR3.1: The LCD shall display clear, readable messages with appropriate delays (2-3 sec-
onds) for user comprehension.
• NFR3.2: The keypad interface shall be intuitive, requiring no more than 5 key presses for
any manual input task.
• NFR3.3: The system shall provide feedback for every user action (e.g., key press, RFID scan)
via LCD or UART.
3.2.4 Security
• NFR4.1: The system shall only process authorized UIDs from the predefined user database.
• NFR4.2: The system shall prevent unauthorized gate opening without valid RFID or manual
input processing.
3.2.5 Maintainability
• NFR5.1: The system code shall be modular, with separate header files for each peripheral
(LCD, PWM, RTC, UART, etc.).
• NFR5.2: The system shall use meaningful variable names and include comments for all
functions and key code blocks.
5

3.2.6 Communication Interfaces
• CR1.1: The system shall use UART0 with 8-bit data, 1 stop bit, and no parity for RFID com-
munication and transaction logging.
• CR1.2: The system shall use SPI with a 16-bit data frame for peripheral communication.
4 System Constraints
• The system shall operate on the LPC1768 microcontroller with limited memory and pro-
cessing resources.
• The system shall not rely on external network connectivity for operation.
• The user database shall be limited to 5 users due to memory constraints.
• The system shall support only three vehicle types: Car, Truck, and Motorcycle.
5 Acceptance Criteria
• The system shall successfully detect and process 100 consecutive vehicles without errors.
• The system shall correctly identify and handle government vehicles with zero toll charges.
• The system shall accurately deduct toll charges and update user balances for valid RFID
tags.
• The system shall process vehicles without RFID tags by accepting manual vehicle type input
and applying appropriate charges.
• The system shall display all messages clearly on the LCD and log transaction details via
UART.
• The system shall open and close the gate reliably for authorized transactions.
6 Assumptions
• The RFID reader transmits valid 5-digit UIDs terminated with a null character.
• The keypad provides reliable input with no more than one key press at a time.
• The tollgate mechanism responds accurately to PWM signals for lifting and closing.
• The system operates in an environment with ambient temperatures suitable for ADC read-
ings.
6